// Mocks generated by Mockito 5.4.6 from annotations
// in todo_app/test/widget_todo_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_app/domain/memo_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MemoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMemoRepository extends _i1.Mock implements _i2.MemoRepository {
  MockMemoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i2.Memo>> loadMemos(int? taskIndex) =>
      (super.noSuchMethod(
            Invocation.method(#loadMemos, [taskIndex]),
            returnValue: _i3.Future<List<_i2.Memo>>.value(<_i2.Memo>[]),
          )
          as _i3.Future<List<_i2.Memo>>);

  @override
  _i3.Future<void> saveMemos(int? taskIndex, List<_i2.Memo>? memos) =>
      (super.noSuchMethod(
            Invocation.method(#saveMemos, [taskIndex, memos]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
